/*
 You need to create an express HTTP server in Node.js which will handle the logic of a todo list app.
  - Don't use any database, just store all the data in an array to store the todo list data (in-memory)
  - Hard todo: Try to save responses in files, so that even if u exit the app and run it again, the data remains (similar to databases)

  Each todo has a title and a description. The title is a string and the description is a string.
  Each todo should also get an unique autogenerated id every time it is created
  The expected API endpoints are defined below,
  1.GET /todos - Retrieve all todo items
    Description: Returns a list of all todo items.
    Response: 200 OK with an array of todo items in JSON format.
    Example: GET http://localhost:3000/todos
    
  2.GET /todos/:id - Retrieve a specific todo item by ID
    Description: Returns a specific todo item identified by its ID.
    Response: 200 OK with the todo item in JSON format if found, or 404 Not Found if not found.
    Example: GET http://localhost:3000/todos/123
    
  3. POST /todos - Create a new todo item
    Description: Creates a new todo item.
    Request Body: JSON object representing the todo item.
    Response: 201 Created with the ID of the created todo item in JSON format. eg: {id: 1}
    Example: POST http://localhost:3000/todos
    Request Body: { "title": "Buy groceries", "completed": false, description: "I should buy groceries" }
    
  4. PUT /todos/:id - Update an existing todo item by ID
    Description: Updates an existing todo item identified by its ID.
    Request Body: JSON object representing the updated todo item.
    Response: 200 OK if the todo item was found and updated, or 404 Not Found if not found.
    Example: PUT http://localhost:3000/todos/123
    Request Body: { "title": "Buy groceries", "completed": true }
    
  5. DELETE /todos/:id - Delete a todo item by ID
    Description: Deletes a todo item identified by its ID.
    Response: 200 OK if the todo item was found and deleted, or 404 Not Found if not found.
    Example: DELETE http://localhost:3000/todos/123
 */

const express = require("express");
const app = express();
const port = 4000;
const bodyParser = require("body-parser");
const fs=require("fs")
app.use(express.json());
app.use(bodyParser.json());
app.use(express.json());
let todos = loadTodo();

app.get("/todos", (req, res) => {todos;
  res.send(todos.map((todo) => todo.thing));
});
app.get("/", (req, res) => {
  res.sendFile(__dirname + "/" + "index.html");
const name = __dirname 
console.log(name);
});

app.get("/todos/:id", (req, res) => {
  const id = req.params.id;
  const todo = todos.find((todo) => todo.id === id);
  if (todo) {
    res.status(200).json(todo);
  } else {
    res.status(404);
  }
});
app.post("/todos", (req, res) => {
  const { thing, status } = req.body;
  const id = (todos.length + 1).toString();
  todos.push({ id, thing, status });
  saveTodos();
  res.status(201).json({ id });
});

app.put("/todos/:id", (req, res) => {
  const id = req.params.id;
  const index = todos.findIndex((todo) => todo.id === id);
  if (index !== -1) {
    const { thing, status } = req.body;
    todos[index] = { id, thing, status };
     saveTodos();
    res.status(200).json({ message: "you did it boss" });
  } else {
    res
      .status(404)
      .json({ message: "index out of bound/didn't find anything" });
  }
});
app.delete("/todos/:id", (req, res) => {
  const id = req.params.id;
  const indexToRemove = todos.findIndex((todo) => todo.id === id);
  if (indexToRemove !== -1) {
    todos.splice(indexToRemove, 1);
    res.status(200).json({ message: "the todo have been deleted sucessfully" });
  } else {
    res
      .status(404)
      .json({ message: "index out of bound/didn't find anything" });
  }
});
app.listen(3000)

function loadTodo(){
  const data=fs.readFileSync("todos.json",JSON.stringify(todos,null,2));
  console.log("todo saved");
}
function saveTodo(){
  fs.writeFileSync("todos.json",JSON.stringify(todos,null,2));
  console.log("TODOS SAVED");terminal
  poweroff
  
}
